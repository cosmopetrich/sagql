name: Build dependencies

on:
  workflow_dispatch:
  push:
    branches: [ "master" ]
    paths: vcpkg.json

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        # target: [x64-linux, x64-windows]
        target: [x64-windows]
        include:
          # - target: x64-linux
          #   os: ubuntu-latest
          #   vcpkg: vcpkg
          #   vcpkg_bin: installed/x64-linux/bin
          - target: x64-windows
            os: windows-latest
            vcpkg: vcpkg.exe
            vcpkg_bin: vcpkg\installed\x64-windows\bin
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout vcpkg
        uses: actions/checkout@v4
        with:
          path: vcpkg
          fetch-depth: 0
          repository: microsoft/vcpkg
      - name: Checkout vcpkg.json
        uses: actions/checkout@v4
        with:
          path: config
          sparse-checkout: vcpkg.json
      - name: Install vcpkg.json
        run: mv config/vcpkg.json vcpkg/
      - name: Maintain binary cache
        uses: actions/cache@v4
        with:
          path: binarysource
          key: vcpkg-${{ runner.target }}
      - name: Bootstrap vcpkg
        run: bootstrap-vcpkg
        working-directory: vcpkg
      - run: ls vcpkg/installed/${{ matrix.target }}
      - name: Build libraries
        run: ${{ matrix.vcpkg }} install --binarysource ../binarysource --triplet ${{ matrix.target }}
        working-directory: vcpkg
      - uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          path: |
            vcpkg/installed/${{ matrix.target }}/graphqlservice*
            vcpkg/installed/${{ matrix.target }}/graphqlpeg*
            vcpkg/installed/${{ matrix.target }}/graphqljson*
            vcpkg/installed/${{ matrix.target }}/graphqlresponse*
            vcpkg/installed/${{ matrix.target }}/zlib*
            vcpkg/installed/${{ matrix.target }}/uv*
