name: Build dependencies

on:
  workflow_dispatch:
  push:
    branches: [ "master" ]
    paths: vcpkg.json

env: 
    # https://learn.microsoft.com/en-us/vcpkg/consume/binary-caching-github-actions-cache
    VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        target: [Linux-x86_64, Win64]
        include:
          - target: Linux-x86_64
            triplet: x64-linux
            os: ubuntu-latest
            vcpkg: vcpkg
            vcpkg-bootstrap: ./bootstrap-vcpkg.sh
            artifacts-lib: lib/*.a
            artifacts-debug: debug/*.a
            artifacts-schemagen: schemagen
          - target: Win64
            triplet: x64-windows
            os: windows-latest
            schemagen-triplet: x64-windows-static
            vcpkg: vcpkg.exe
            vcpkg-bootstrap: bootstrap-vcpkg.bat
            artifacts-lib: bin/*.dll
            artifacts-debug: bin/*
            artifacts-schemagen: schemagen.exe
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout vcpkg
        uses: actions/checkout@v4
        with:
          path: vcpkg
          fetch-depth: 0
          repository: microsoft/vcpkg
      - name: Checkout vcpkg.json
        uses: actions/checkout@v4
        with:
          path: config
          sparse-checkout: vcpkg.json
      - name: Install vcpkg.json
        run: mv config/vcpkg.json vcpkg/
      - name: Configure caching
        uses: actions/github-script@v7
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');
      - name: Bootstrap vcpkg
        run: ${{ matrix.vcpkg-bootstrap }}
        working-directory: vcpkg
      - name: Build libraries (dynamic)
        run: ${{ matrix.vcpkg }} install --triplet ${{ matrix.triplet }}
        working-directory: vcpkg
      - name: Build libraries (static)
        if: ${{ matrix.schemagen-triplet }}
        run: ${{ matrix.vcpkg }} install --triplet ${{ matrix.triplet }}-static
        working-directory: vcpkg
      - name: Upload libraries
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: vcpkg/vcpkg_installed/${{ matrix.triplet }}/${{ matrix.artifacts }}
          if-no-files-found: error
      - name: Upload debug libraries
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}-debug
          path: vcpkg/vcpkg_installed/${{ matrix.triplet }}/${{ matrix.artifacts }}
          if-no-files-found: error
      - name: Upload schemagen
        if: ${{ matrix.artifacts-schemagen }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.triplet }}-${{ matrix.artifacts-schemagen }}
          path: vcpkg/vcpkg_installed/${{ matrix.schemagen-triplet || matrix.triplet }}/tools/cppgraphqlgen/${{ artifacts-schemagen }}
          if-no-files-found: error
